import {MessageContext} from "puregram";
import {User} from "../model";
import {adminkeyboard, buildAdminKeyboard} from "./app";
import {debug} from "../debug";

export class BotController {
    async addCategory(context: MessageContext) {

    }

    async settings(context: MessageContext) {
        try {
            await context.send('–ò–∑–≤–∏–Ω–∏—Ç–µ –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ!');
        } catch (e) {

        }
    }

    async login(context: MessageContext) {
        try {
            const user = await User.findOne({ where: { chat_id: context.chatId } });
            if (user && user.granted) {
                await context.send('–í—ã —É–∂–µ –≤ —Å–∏—Å—Ç–µ–º–µ! üòâ', {reply_markup: buildAdminKeyboard(user.token!)});
            }
            const created = await User.create({
                name: context.chat.firstName || '',
                chat_id: `${context.chatId}`,
                isAdmin: true,
                isGroup: false,
                granted: false
            });
            if (!created) {
                await context.send('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞! üòÖ');
                return
            }
            await context.send('–û—Ç–ø—Ä–∞–≤—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞!', {reply_markup: {remove_keyboard: true}});
            return
        } catch (e: any) {
            debug({message: `${e.message}`, method: 'login', file: 'bot/controller.ts'});
            await context.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ! üòÖ');
        }
    }
}